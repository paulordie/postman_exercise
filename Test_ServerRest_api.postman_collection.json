{
	"info": {
		"_postman_id": "78bf5eac-4b3e-4ab7-b244-4afb44d0ac39",
		"name": "Test_ServerRest_api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Functional",
					"item": [
						{
							"name": "login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Tests",
											"var jsonData = pm.response.json();",
											"",
											"console.log(jsonData.authorization)",
											"",
											"pm.globals.set('authorization', jsonData.authorization)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"pcorrea@qa.com.br\",\n  \"password\": \"teste123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}login",
									"host": [
										"{{address_server_rest}}login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Functional",
					"item": [
						{
							"name": "new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"console.log(jsonData._id)",
											"",
											"pm.environment.set('_id', jsonData._id)",
											"pm.environment.set('_id_invalid', jsonData._id + '1')",
											"",
											"",
											"pm.test(\"Status code é 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON\", function () {",
											"    pm.expect(jsonData.message).to.eql('Cadastro realizado com sucesso');",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Paulo Correa\",\n  \"email\": \"pcorrea@qa.com.br\",\n  \"password\": \"teste123\",\n  \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}usuarios",
									"host": [
										"{{address_server_rest}}usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "new user exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"console.log(jsonData._id)",
											"",
											"pm.test(\"Status code é 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON: Este email já está sendo usado\", function () {",
											"    pm.expect(jsonData.message).to.eql('Este email já está sendo usado');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Paulo Correa\",\n  \"email\": \"pcorrea@qa.com.br\",\n  \"password\": \"teste123\",\n  \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}usuarios",
									"host": [
										"{{address_server_rest}}usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "get user by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set('nome', jsonData.nome)",
											"pm.environment.set('email', jsonData.email)",
											"pm.environment.set('password', jsonData.password)",
											"pm.environment.set('administrador', jsonData.administrador)",
											"pm.environment.set('_id',jsonData._id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}usuarios/{{_id}}",
									"host": [
										"{{address_server_rest}}usuarios"
									],
									"path": [
										"{{_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get user by id not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON: Usuário não encontrado\", function () {",
											"\tpm.expect(jsonData.message).to.eql('Usuário não encontrado');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}usuarios/{{_id_invalid}}",
									"host": [
										"{{address_server_rest}}usuarios"
									],
									"path": [
										"{{_id_invalid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get users",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}usuarios",
									"host": [
										"{{address_server_rest}}usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "edit user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON: Registro alterado com sucesso\", function () {",
											"\t\tpm.expect(jsonData.message).to.eql('Registro alterado com sucesso');",
											"\t});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Paulo Correa test\",\n  \"email\": \"pcorrea@qa.com.br\",\n  \"password\": \"teste123\",\n  \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}usuarios/{{_id}}",
									"host": [
										"{{address_server_rest}}usuarios"
									],
									"path": [
										"{{_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "edit user with new email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON: Cadastro realizado com sucesso\", function () {",
											"\t\tpm.expect(jsonData.message).to.eql('Cadastro realizado com sucesso');",
											"\t});",
											"",
											"",
											"pm.environment.set('_id_new', jsonData._id)",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Paulo Correa test second\",\n  \"email\": \"pcorrea123@qa.com.br\",\n  \"password\": \"teste123\",\n  \"administrador\": \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}usuarios/5252121",
									"host": [
										"{{address_server_rest}}usuarios"
									],
									"path": [
										"5252121"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Functional",
					"item": [
						{
							"name": "get products",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{address_server_rest}}produtos",
									"host": [
										"{{address_server_rest}}produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "new product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"console.log(jsonData._id)",
											"",
											"pm.environment.set('_id_product', jsonData._id)",
											"",
											"pm.test(\"Status code é 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON: novo produto cadastrado\", function () {",
											"    pm.expect(jsonData.message).to.eql('Cadastro realizado com sucesso');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let pathServer = pm.environment.get('address_server_rest')",
											"let email = pm.environment.get('email')",
											"let password = pm.environment.get('password')",
											"",
											"let GetLoginAndAuthorization = {",
											"\turl: `${pathServer}login` ,",
											"\tmethod: \"POST\",",
											"\theader: { 'content-type': 'application/json' },",
											"\tbody: {",
											"\t\tmode: 'raw', raw: JSON.stringify({",
											"\t\t\t\"email\":email,",
											"\t\t\t\"password\":password",
											"\t\t})",
											"\t}            ",
											"}",
											"",
											"pm.sendRequest(GetLoginAndAuthorization, function (err, res){",
											"\tlet json = res.json()",
											"\tpm.environment.set('authorization', json.authorization)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authorization}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Notebook\",\n  \"preco\": 4700,\n  \"descricao\": \"PC\",\n  \"quantidade\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}produtos",
									"host": [
										"{{address_server_rest}}produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "there is product name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"console.log(jsonData._id)",
											"",
											"",
											"pm.test(\"Status code é 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON: Já existe produto cadastrado com esse nome\", function () {",
											"    pm.expect(jsonData.message).to.eql('Já existe produto com esse nome');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let pathServer = pm.environment.get('address_server_rest')",
											"let email = pm.environment.get('email')",
											"let password = pm.environment.get('password')",
											"",
											"let GetLoginAndAuthorization = {",
											"\turl: `${pathServer}login` ,",
											"\tmethod: \"POST\",",
											"\theader: { 'content-type': 'application/json' },",
											"\tbody: {",
											"\t\tmode: 'raw', raw: JSON.stringify({",
											"\t\t\t\"email\":email,",
											"\t\t\t\"password\":password",
											"\t\t})",
											"\t}            ",
											"}",
											"",
											"pm.sendRequest(GetLoginAndAuthorization, function (err, res){",
											"\tlet json = res.json()",
											"\tpm.environment.set('authorization', json.authorization)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{authorization}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Notebook\",\n  \"preco\": 4700,\n  \"descricao\": \"PC\",\n  \"quantidade\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}produtos",
									"host": [
										"{{address_server_rest}}produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "there is product and not authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"console.log(jsonData._id)",
											"",
											"",
											"pm.test(\"Status code é 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON: Token de acesso ausente, inválido, expirado ou usuário do token não existe mais\", function () {",
											"    pm.expect(jsonData.message).to.eql('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let pathServer = pm.environment.get('address_server_rest')",
											"let email = pm.environment.get('email')",
											"let password = pm.environment.get('password')",
											"",
											"let GetLoginAndAuthorization = {",
											"\turl: `${pathServer}login` ,",
											"\tmethod: \"POST\",",
											"\theader: { 'content-type': 'application/json' },",
											"\tbody: {",
											"\t\tmode: 'raw', raw: JSON.stringify({",
											"\t\t\t\"email\":email,",
											"\t\t\t\"password\":password",
											"\t\t})",
											"\t}            ",
											"}",
											"",
											"pm.sendRequest(GetLoginAndAuthorization, function (err, res){",
											"\tlet json = res.json()",
											"\tpm.environment.set('authorization', json.authorization)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{authorization}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Notebook\",\n  \"preco\": 4700,\n  \"descricao\": \"PC\",\n  \"quantidade\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}produtos",
									"host": [
										"{{address_server_rest}}produtos"
									]
								}
							},
							"response": []
						},
						{
							"name": "edit product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"console.log(jsonData._id)",
											"",
											"",
											"pm.test(\"Status code é 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Mensagem esperada no JSON: Registro alterado com sucesso\", function () {",
											"    pm.expect(jsonData.message).to.eql('Registro alterado com sucesso');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let pathServer = pm.environment.get('address_server_rest')",
											"let email = pm.environment.get('email')",
											"let password = pm.environment.get('password')",
											"",
											"let GetLoginAndAuthorization = {",
											"\turl: `${pathServer}login` ,",
											"\tmethod: \"POST\",",
											"\theader: { 'content-type': 'application/json' },",
											"\tbody: {",
											"\t\tmode: 'raw', raw: JSON.stringify({",
											"\t\t\t\"email\":email,",
											"\t\t\t\"password\":password",
											"\t\t})",
											"\t}            ",
											"}",
											"",
											"pm.sendRequest(GetLoginAndAuthorization, function (err, res){",
											"\tlet json = res.json()",
											"\tpm.environment.set('authorization', json.authorization)",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authorization}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nome\": \"Notebook\",\n  \"preco\": 40,\n  \"descricao\": \"PC\",\n  \"quantidade\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{address_server_rest}}produtos/{{_id_product}}",
									"host": [
										"{{address_server_rest}}produtos"
									],
									"path": [
										"{{_id_product}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "deleter",
			"item": [
				{
					"name": "delete product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"console.log(jsonData._id)",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (jsonData.message === \"Registro excluído com sucesso\"){",
									"\tpm.test(\"Mensagem esperada no JSON: Registro excluído com sucesso\", function () {",
									"\t\tpm.expect(jsonData.message).to.eql('Registro excluído com sucesso');",
									"\t});",
									"} else {",
									"\tpm.test(\"Mensagem esperada no JSON: Nenhum registro excluído\", function () {",
									"\t\tpm.expect(jsonData.message).to.eql('Nenhum registro excluído');",
									"\t});",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let pathServer = pm.environment.get('address_server_rest')",
									"let email = pm.environment.get('email')",
									"let password = pm.environment.get('password')",
									"",
									"let GetLoginAndAuthorization = {",
									"\turl: `${pathServer}login` ,",
									"\tmethod: \"POST\",",
									"\theader: { 'content-type': 'application/json' },",
									"\tbody: {",
									"\t\tmode: 'raw', raw: JSON.stringify({",
									"\t\t\t\"email\":email,",
									"\t\t\t\"password\":password",
									"\t\t})",
									"\t}            ",
									"}",
									"",
									"pm.sendRequest(GetLoginAndAuthorization, function (err, res){",
									"\tlet json = res.json()",
									"\tpm.environment.set('authorization', json.authorization)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{address_server_rest}}produtos/{{_id_product}}",
							"host": [
								"{{address_server_rest}}produtos"
							],
							"path": [
								"{{_id_product}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (jsonData.message === 'Registro excluído com sucesso'){",
									"\tpm.test(\"Mensagem esperada no JSON: Registro excluído com sucesso\", function () {",
									"\t\tpm.expect(jsonData.message).to.eql('Registro excluído com sucesso');",
									"\t});",
									"} else {",
									"\tpm.test(\"Mensagem esperada no JSON: Nenhum registro excluído\", function () {",
									"\t\tpm.expect(jsonData.message).to.eql('Nenhum registro excluído');",
									"\t});",
									"}",
									"\t",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{address_server_rest}}usuarios/{{_id}}",
							"host": [
								"{{address_server_rest}}usuarios"
							],
							"path": [
								"{{_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (jsonData.message === 'Registro excluído com sucesso'){",
									"\tpm.test(\"Mensagem esperada no JSON: Registro excluído com sucesso\", function () {",
									"\t\tpm.expect(jsonData.message).to.eql('Registro excluído com sucesso');",
									"\t});",
									"} else {",
									"\tpm.test(\"Mensagem esperada no JSON: Nenhum registro excluído\", function () {",
									"\t\tpm.expect(jsonData.message).to.eql('Nenhum registro excluído');",
									"\t});",
									"}",
									"\t",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{authorization}}"
							}
						],
						"url": {
							"raw": "{{address_server_rest}}usuarios/{{_id_new}}",
							"host": [
								"{{address_server_rest}}usuarios"
							],
							"path": [
								"{{_id_new}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "id_user",
			"value": "address_server_rest"
		},
		{
			"key": "_id",
			"value": "dSfTOAwrEXy3GJp3"
		},
		{
			"key": "_id_invalid",
			"value": "laZxWEsl024BjGCv1"
		},
		{
			"key": "_id_product",
			"value": "Lm7Kd7eSxaBi3Xdc"
		},
		{
			"key": "administrador",
			"value": "true"
		},
		{
			"key": "email",
			"value": "pcorrea@qa.com.br"
		},
		{
			"key": "nome",
			"value": "Paulo Correa"
		},
		{
			"key": "password",
			"value": "teste123"
		}
	]
}